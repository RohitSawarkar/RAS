package ej.generic;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import com.linuxense.javadbf.DBFException;
import com.linuxense.javadbf.DBFField;
import com.linuxense.javadbf.DBFReader;

public class DbfReaderTest {

	public static int numberOfFields;
	public static DBFReader reader;
	public static InputStream inputStream;

	public DbfReaderTest(String dbfFilePath) throws FileNotFoundException, DBFException {

		// take dbf file as program argument
		inputStream = new FileInputStream(dbfFilePath);

		reader = new DBFReader(inputStream);
		// get the field count if you want for some reasons like the
		// following
		numberOfFields = reader.getRecordCount();

		// use this count to fetch all field information
		// if required
	}

	public void TestDbf() throws IOException {

		for (int i = 0; i < numberOfFields; i++) {

			DBFField field = reader.getField(i);

			// do something with it if you want
			// refer the JavaDoc API reference for more details
			//
			System.out.println(field.getName());
		}

		// Now, lets us start reading the rows
		//
		Object[] rowObjects;

		while ((rowObjects = reader.nextRecord()) != null) {

			for (int i = 0; i < rowObjects.length; i++) {

				System.out.println(rowObjects[i]);
			}
		}

		// By now, we have itereated through all of the rows

		inputStream.close();

	}
	
	
	public static void main(String[] args) throws IOException {
		
		DbfReaderTest objDbfReaderTest = new DbfReaderTest("D:\\NewWork\\dbproject\\TR32006.dbf");

	//	DbfReaderTest objDbfReaderTest = new DbfReaderTest("D:\\NewWork\\dbproject\\M96030m.dbf");
		
	//	objDbfReaderTest.TestDbf();
	}
}
